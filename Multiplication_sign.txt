	lw	0	2	Mcand	#$2 = Mcand
	lw	0	3	Mplier	#$3 = Mplier
	lw	0	4	negmax	#$4 = 1000 0000 0000 0000 0000 0000 0000 0000
	nand	2	4	5	#filterMcand signbit
	nand	5	5	5	#true Mcand signbit
	nand	3	4	6	#filterMplier signbit
	nand	6	6	6	#true Mplier signbit
	beq	5	6	eq	#signbit Mcand == signbit Mplier?
	sw	0	4	sgnbit	#store signbit answer = 1 
	beq	0	0	store1	#goto store1
eq	sw	0	0	sgnbit	#store signbit answer = 0
store1	lw	0	1	one	#$1 = 1
	lw	0	7	allone	#$7 = 1111 1111 1111 1111 1111 1111 1111 1111
	beq	4	5	sign1	#Mcand is negative goto sign1
	beq	0	0	chks2	#Mcand is positive goto chks2
sign1	nand	7	2	2	#Mcand negative
	add	2	1	2	#to positive
chks2	beq	4	6	sign2	#Mplier is negative goto sign2
	beq	0	0	store2	#Mcand and Mplier is positive goto store2
sign2	nand	7	3	3	#Mplier negative
	add	3	1	3	#to positive
store2	add	0	0	1	#$1 = 0 inintialize answer
	lw	0	4	bit15	#$4 is check end loop
	lw	0	5	selbit	#$5 is selectbit Mplier
loop	beq	4	5	done	#check loop
	nand	3	5	6	#filter Mplier0 by selectbit
	nand	6	6	6	#true Mplier0
	beq	0	6	skip	#Mplier0 == 0? : true goto skip
	add	1	2	1	#Mplier0 != 0 : answer += Mcand
skip	add	2	2	2	#shift left Mcand
	add	5	5	5	#shift left selectbit
	beq	0	0	loop	#goto checkloop
done	lw	0	4	sgnbit	#load signbit answer	
	lw	0	6	allone	#$6 = 1111 1111 1111 1111 1111 1111 1111 1111
	beq	0	4	end	#answer signbit == 0 not convert
	nand	1	6	1	#convert to true answer
	lw	0	7	one
	add	7	1	1
end	halt				#end program
Mcand	.fill	-30000
Mplier	.fill	30001
selbit	.fill	1
bit15	.fill	131072
negmax	.fill	-2147483648â€¬
sgnbit	.fill	50
one	.fill	1
allone	.fill	-1
